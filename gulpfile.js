var gulp                    = require('gulp'),
    sass                    = require('gulp-sass'),
    cleanCSS                = require('gulp-clean-css'),
    autoprefixer            = require('gulp-autoprefixer'),
    rename                  = require('gulp-rename'),
    uglify                  = require('gulp-uglify'),
    concat                  = require('gulp-concat'),
    plumber                 = require('gulp-plumber'),
    babel                   = require('gulp-babel'),
    sourcemaps              = require('gulp-sourcemaps'),
    htmlmin                 = require('gulp-html-minifier'),
    browserSync             = require('browser-sync'),
    pug                     = require('gulp-pug');


var src                     = './example/',
    build                   = './build/';

    // Compile SASS
        gulp.task('sass', function() {
            gulp.src(src + 'style/*.sass')
                .pipe(sourcemaps.init())
                    .pipe(plumber())
                    .pipe(sass())
                    .pipe(autoprefixer())
                    //.pipe(rename({ basename: 'style'}))
                    .pipe(cleanCSS())
                    .pipe(rename({ suffix: '.min'}))
                .pipe(sourcemaps.write('.'))
                .pipe(gulp.dest(build))
                .pipe(browserSync.stream());
        });

    // Compile Pug
        gulp.task('pug', function () {
            gulp.src(src + 'views/*.pug')
            .pipe(pug({
                pretty: true
            }))
            .pipe(rename({ extname: '.php'}))
            .pipe(htmlmin({
                collapseWhitespace: true, 
                includeAutoGeneratedTags: false
            }))
            .pipe(gulp.dest(build))
            .pipe(browserSync.stream());
        });

    // Minify JS
        gulp.task('js', function() {
            gulp.src(src + 'script/*.js')
                .pipe(sourcemaps.init())
                    .pipe(plumber())
                    .pipe(concat('functions.js'))
                    .pipe(babel({
                        presets: ['es2015'] }))
                    .pipe(uglify())
                    .pipe(rename({ suffix: '-dist'}))
                .pipe(sourcemaps.write('.'))
                .pipe(gulp.dest(build + 'js'))
                .pipe(browserSync.stream());
        });

    // WATCH 
        gulp.task('default', function() {
            browserSync.init({
                proxy: "http://localhost/StargazerJS",
                notify: false
            });
            gulp.watch([ src + '*.sass', ],['sass']);
            gulp.watch([ src + 'script/*.js' ],['js']);
            gulp.watch([ src + '*.pug', ],['pug']);
        });